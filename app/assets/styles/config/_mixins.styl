//
// Unit mixins
//
remify(value) { /* separate mixin, so it can be used elsewhere */
  u = unit(value);
  if (u is 'px') {
    return unit(value/16, 'rem');
  } else {
    return unit(value, u);
  }
}

//
// Typografy mixins
//
set-font-size(value) {
  font-size: value; /* add PX (or original value) as backup */
  if (value is inherit) {
  /* do nothing, "inherit" has no unit */
  } else {
    font-size: remify(value);
  }
}

//
// Position mixins
//
absoluteTopLeft(vTop = 0, vLeft = 0)
  position absolute
  top vTop
  left vLeft

absoluteTopRight(vTop = 0, vRight = 0)
  position absolute
  top vTop
  right vRight

absoluteBottomLeft(vBottom = 0, vLeft = 0)
  position absolute
  bottom vBottom
  left vLeft

absoluteBottomRight(vBottom = 0, vRight = 0)
  position absolute
  bottom vBottom
  right vRight

//
// Position mixins
//
size(width, height)
  display inline-block
  width width
  height height

square(value)
  size(remify(value), remify(value))

circle(value)
  square(value)
  border-radius remify(value)

// Utils & snippets
circleSeparator(sizeValue, marginVertical, marginHorizontal)
  &:nth-child(n+2)
    &:before
      background $grayLight
      circle(sizeValue)
      content ''
      margin remify(marginVertical) remify(marginHorizontal)


// Sprites
spriteWidth($sprite)
    width $sprite[4]

spriteHeight($sprite)
    height $sprite[5]

spritePosition($sprite)
    background-position $sprite[2] $sprite[3]

spriteImage($sprite)
    background-image url(../images/$sprite[8])

sprite($sprite)
    // if !match('hover', selector()) && !match('active', selector())
    //     spriteImage($sprite)
    spritePosition($sprite)
    spriteWidth($sprite)
    spriteHeight($sprite)
