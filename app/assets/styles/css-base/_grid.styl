// /**
//  * breakpoints
//  *
//  * max width: 1280px | division: 12c | column: 70px | gutter: 30px | efective width: 1170px
//  * max width: 1024px | division: 12c | column: 58px | gutter: 24px | efective width:  960px
//  * max width:  768px | division: 12c | column: 44px | gutter: 16px | efective width:  704px
//  * max width:  414px | division:  6c | column: 44px | gutter: 16px | efective width:  344px
//  * max width:  320px | division:  6c | column: 35px | gutter: 14px | efective width:  280px
//  *
//  // **/
//  // breakpoints =  'l'  1280px 12 70 30 1170,
//  //                'm'  1024px 12 58 24  960,
//  //                's'   768px 12 44 16  704,
//  //                'xs'  414px  6 44 16  344,
//  //                'xxs' 320px  6 35 14  280
// breakpoints =  {
//   l  : { max:  1280px, cols: 12, colWidth: 70, gutter: 30, width: 1170},
//   m  : { max:  1024px, cols: 12, colWidth: 58, gutter: 24, width:  960},
//   s  : { max:   768px, cols: 12, colWidth: 44, gutter: 16, width:  704},
//   xs : { max:   414px, cols:  6, colWidth: 44, gutter: 16, width:  344},
//   xxs: { max:   320px, cols:  6, colWidth: 35, gutter: 14, width:  280},
// }

// getBreakpoint(name)
//   breakpoints[name]

// breakpoint(name, prop)
//   breakpoint = getBreakpoint(name)[prop]

// scale               =  0  320px 414px 768px 1024px 1280px
// rupture.scale-names = '0'  'xs'   's'   'm'    'l'   'xl'

// edit()

// .container
//   width 100%
//   center(280px)
//   +above(320px)
//     center(344px)
//   +above(414px)
//     center(704px)
//   +above(768px)
//     center(960px)
//   +above(1024px)
//     center(1170px)
//   +above(1280px)
//     center(1280px)

// // column(ratios, offset, cycle, uncycle, gutter)
// lastCycle = 0
// for col in (1..12)
//   .col-{col}-12
//     margin-bottom 5px
//     // ratio = col/breakpoint('xxs', 'cols')
//     // if( ratio > 1)
//     //   ratio = 1
//     // column(ratio, 0, 6)
//     // +above(320px)
//     column(col/6, uncycle: 0, cycle: 6)
//     +above(414px)
//       column(col/12, uncycle: 6, cycle: 12)


.container
  +below('xxs')
    center(rem(280px))

  +below('xs')
    center(rem(344px))

  +below('s')
    center(rem(704px))

  +below('m')
    center(rem(960px))

  +above('l')
    center(rem(1170px))


//  * max width: 1280px | division: 12c | column: 70px | gutter: 30px | efective width: 1170px
//  * max width: 1024px | division: 12c | column: 58px | gutter: 24px | efective width:  960px
//  * max width:  768px | division: 12c | column: 44px | gutter: 16px | efective width:  704px
//  * max width:  414px | division:  6c | column: 44px | gutter: 16px | efective width:  344px
//  * max width:  320px | division:  6c | column: 35px | gutter: 14px | efective width:  280px
// (ratios = 1, offset = 0, cycle = 0, uncycle = 0, gutter = jeet-gutter)
$xxs_gutter = 5
$xs_gutter = 4.652
$s_gutter = 2.273
$m_gutter = 2.5
$l_gutter = 2.565

buildCol(num)
  +below('xxs')
    col(num/6, 0, 0, 0, $xxs_gutter)
  +below('xs')
    col(num/6, 0, 0, 0, $xs_gutter)
  +below('s')
    col(num/12, 0, 0, 0, $s_gutter)
  +below('m')
    col(num/12, 0, 0, 0, $m_gutter)
  +above('l')
    col(num/12, 0, 0, 0, $l_gutter)

buildAllCols()
  for num in (1..12)
    .col-{num}
      buildCol(num)


.container
  buildAllCols()
